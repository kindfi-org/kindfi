# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Account @entity {
	id: ID!
	firstSeenLedger: Int
	lastSeenLedger: Int
	sentTransfers: [Transfer] @derivedFrom(field: "from") # These are virtual properties to help us navigate to the correct foreign key of Transfer
	recievedTransfers: [Transfer] @derivedFrom(field: "to") # These are virtual properties to help us navigate to the correct foreign key of Transfer
	sentPayments: [Payment] @derivedFrom(field: "from") # These are virtual properties to help us navigate to the correct foreign key of Payment
	receivedPayments: [Payment] @derivedFrom(field: "to") # These are virtual properties to help us navigate to the correct foreign key of Payment
}

type Transfer @entity {
	id: ID!
	ledger: Int!
	date: Date!
	contract: String!
	from: Account!
	to: Account!
	value: BigInt!
}

type Payment @entity {
	id: ID!
	txHash: String!
	from: Account!
	to: Account!
	amount: String!
}

type Credit @entity {
	id: ID!
	account: Account!
	amount: String!
}

type Debit @entity {
	id: ID!
	account: Account!
	amount: String!
}
