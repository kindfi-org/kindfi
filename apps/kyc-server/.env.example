# KYC Server Environment Configuration Example
# Copy this file to .env and modify the values as needed

# =============================================================================
# Server Configuration
# =============================================================================
# Port to run the server on (default: 3001)
PORT=3001

# Node environment (development, production, test)
NODE_ENV=development

# =============================================================================
# Redis Configuration
# =============================================================================

# Redis connection URL for storing passkey challenges and credentials
# Leave empty to use in-memory storage (for development only)
# Format: redis://username:password@host:port
REDIS_URL=redis://localhost:6379

# =============================================================================
# WebAuthn/Passkey Configuration
# =============================================================================
# Relying Party IDs - JSON array of domains that can use this passkey service
# These should be the domains where your application is hosted
# For local development, include "localhost"
RP_ID='["localhost", "your-domain.com"]'

# Relying Party Names - JSON array of application names corresponding to RP_IDs
# These are displayed to the user during passkey registration/authentication
RP_NAME='["KYC Server", "KYC Server Production"]'

# Expected Origins - JSON array of full URLs that can make passkey requests
# Must include protocol (http/https)
# IMPORTANT: These origins must be included in all API requests as the "origin" parameter
EXPECTED_ORIGIN='["http://localhost:3001", "https://kyc.your-domain.com"]'

# Challenge Time-to-Live in seconds
# How long a passkey challenge remains valid
CHALLENGE_TTL_SECONDS=60

# =============================================================================

# CORS Configuration
# =============================================================================
# Comma-separated list of allowed origins (no spaces)
# Use '*' for development to allow all origins (not recommended for production)
# Examples:
# - All origins: ALLOWED_ORIGINS=*
# - Specific origins: ALLOWED_ORIGINS=https://app.example.com,https://admin.example.com
# 
# NOTE: For passkey operations, these origins should match the EXPECTED_ORIGIN values

ALLOWED_ORIGINS=https://your-domain.com,http://localhost:3001